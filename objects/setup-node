#!/bin/sh

# usage: setup-node TYPE NUMBER
r_type="$1"
r_number="$2"

if [ "$r_type" = router ]
then
    sudo sysctl -w "net.ipv4.conf.all.forwarding=1" >/dev/null
    sudo sysctl -w "net.ipv6.conf.all.forwarding=1" >/dev/null
fi

sudo cp -a /tmp/experiment/lib* /usr/local/lib/
sudo cp -a /tmp/experiment/iotup* /usr/local/bin/
sudo cp -a /tmp/experiment/lcroute /usr/local/bin/
sudo cp -a /tmp/experiment/lwmon /usr/local/bin/
sudo cp -a /tmp/experiment/lwmon-log /usr/local/bin/
sudo cp -a /tmp/experiment/mcast???? /usr/local/bin/
sudo cp -a /tmp/experiment/librecast* /usr/local/include/
sudo cp -a /tmp/experiment/lwmon.h /usr/local/include/
sudo mkdir -p /usr/local/include/lwmon
sudo cp -a /tmp/experiment/lwmon-include/* /usr/local/include/lwmon/
sudo ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime
sudo sed -i -e 's/\<us\.archive/be.archive/' /etc/apt/sources.list
sudo ldconfig

chmod 600 /tmp/experiment/id_rsa
cp /tmp/experiment/id_rsa* $HOME/.ssh

# update host table to have more useful list of nodes than the
# one we get from the testbed
egrep -vi '^192\.168\.|^fd|^fe80:' /etc/hosts > /tmp/hosts
cat /tmp/experiment/hosts >> /tmp/hosts
sudo cp /tmp/hosts /etc/hosts

# find all IP addresses this node needs, and on which interfaces
code=0
lname=c
> /tmp/interface
while read what type number hwaddr ipv4 ipv6
do
    [ "$what" = ADDR ] || continue
    [ "$type" = "$r_type" ] || continue
    [ "$number" = "$r_number" ] || continue
    interface="`grep -li $hwaddr /sys/class/net/*/address | \
		awk -F/ '{print $(NF-1); exit}'`"
    if [ ".$interface" = . ]
    then
	echo "Cannot figure out interface name" >&2
	code=1
    fi
    printf '%-10s %-16s %s\n' "$interface" "$ipv4" "$ipv6" >&2
    ip addr show dev "$interface" | \
    awk '($1 == "inet" || $1 == "inet6") && /scope global/ {print $2}' | \
    while read oldaddr
    do
	sudo ip addr delete "$oldaddr" dev "$interface"
    done
    sudo ip link set down dev "$interface"
    echo "$interface" >> /tmp/interface
    sudo ip link set up dev "$interface"
    # wait for link-local addresses and output /etc/hosts fragment for them
    addrs=`ip -6 addr list scope link dev "$interface" | \
	   awk '$1 == "inet6" {gsub("/[0-9]*$", "", $2); print $2}'`
    while [ ".$addrs" = . ]
    do
	sleep 0.2
	addrs=`ip -6 addr list scope link dev "$interface" | \
	       awk '$1 == "inet6" {gsub("/[0-9]*$", "", $2); print $2}'`
    done
    if [ "$r_type" = router ]
    then
	hname="$r_type$r_number$lname-ll $r_type$r_number-ll"
	lname=s
    else
	hname="$r_type$r_number-ll"
    fi
    for addr in $addrs
    do
	printf '%-30s %s\n' "$addr" "$hname"
	echo "                            $addr" >&2
    done
    # now we can add IP addresses
    sudo ip -4 addr add "$ipv4/24" dev "$interface"
    sudo ip -6 addr add "$ipv6/64" dev "$interface" nodad
    # routers need to actually route packets
    [ "$type" = router ] || continue
    sudo sysctl -w "net.ipv4.conf.$interface.forwarding=1" >/dev/null
    sudo sysctl -w "net.ipv6.conf.$interface.forwarding=1" >/dev/null
done < /tmp/experiment/setup-data

# just making sure...
ping -c1 -n -W1 -6 director0 > /dev/null 2>&1
ping -c1 -n -W1 -6 server0 > /dev/null 2>&1

# see if we need to set up any other routes
while read what type number rto via
do
    [ "$what" = RTE4 ] || [ "$what" = RTE6 ] || continue
    [ "$type" = "$r_type" ] || continue
    [ "$number" = "$r_number" ] || continue
    af="${what#RTE}"
    sudo ip -$af route add "$rto" via "$via"
done < /tmp/experiment/setup-data

exit $code

