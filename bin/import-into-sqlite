#!/usr/bin/perl -w

use strict;
use DBI;
use Cwd 'abs_path';

@ARGV >= 2 or die "Usage: $0 DATABASE SOURCE_FILE [SOURCE_FILE]...\n";
my $database = shift @ARGV;
my $dbh = DBI->connect("dbi:SQLite:dbname=$database", '', '',
		       { RaiseError => 1, AutoCommit => 0 });

run_sql(<<EOF, 1);
create table if not exists lwmon_data (
    topology varchar(255),
    host varchar(255),
    experiment varchar(255),
    boot_time int,
    schedule varchar(255),
    datasize int,
    run int,
    timestamp int,
    name varchar(255),
    parm varchar(255),
    key varchar(255),
    value int
);

create index lwmon_data_run
on lwmon_data(topology, experiment, boot_time, schedule, datasize, run, host);
EOF

while (@ARGV) {
    my $name = shift @ARGV;
    my $path = abs_path($name);
    defined $path or die "Something wrong with $name\n";
    $path =~ m|/\w+\.(\w+)\.(\w+)\.(\d+)\.(\w+)(?::(\d+))?\.(\d+)$|
	or die "Invalid datafile name: $name\n";
    my ($experiment, $schedule, $size, $topology, $boot_time, $run) = ($1, $2, $3, $4, $5, $6);
    defined $boot_time && $boot_time ne '' or $boot_time = 0;
    print "Reading $name\n";
    open(SQL, '-|', 'lwmon-to-sql',
		    '-tlwmon_data',
		    '-Hhost',
		    "-etopology=$topology",
		    "-eexperiment=$experiment",
		    "-eboot_time=$boot_time",
		    "-eschedule=$schedule",
		    "-edatasize=$size",
		    "-erun=$run",
		    '-stimestamp',
		    '-nname',
		    '-pparm',
		    '-kkey',
		    '-dvalue',
		    $path) or die "lwmon-to-sql: $!\n";
    while (<SQL>) {
	chomp;
	run_sql($_, 0);
    }
    if (close SQL) {
	run_sql(undef, 1);
	next;
    }
    $? == -1 and die "lwmon-to-sql: $!\n";
    $? & 0x7f and die 'lwmon-to-sql killed by signal ' . ($? & 0x7f) . "\n";
    die 'lwmon-to-sql exited with status ' . ($? >> 8) . "\n";
}
$dbh->disconnect();

sub run_sql {
    my ($query, $commit) = @_;
    defined $query and $dbh->do($query) || die "$query\n" . $dbh->errstr . "\n";
    $commit and $dbh->commit || die "Commit: " . $dbh->errstr . "\n";
}

