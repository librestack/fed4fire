#!/usr/bin/perl -w

use strict;
use FindBin '$Bin';

my $usage = "Usage: $0 EXP_NAME [DIR] NODE RSYNC_OPTIONS REMOTE_SOURCE [REMOTE_SOURCE]... LOCAL_DEST\n";
@ARGV >= 5 or die $usage;
my $EXP = shift @ARGV;
my $NODE = shift @ARGV;
my $DIR = "/var/tmp";
if ($NODE =~ m|^/|) {
    @ARGV >= 4 or die $usage;
    $DIR = $NODE;
    $NODE = shift @ARGV;
}
my $OPTS = shift @ARGV;
my $DEST = pop @ARGV;
my @SOURCES = @ARGV;

my %ansible_nodes;
my $hf = "$DIR/$EXP/ansible/ansible-hosts";
open (HF, '<', $hf) or die "$hf: $!\n";
my ($host, $port, $user);
while (<HF>) {
    /^\Q$NODE\E\s/ or next;
    chomp;
    /\bansible_ssh_host=(\S+)\b/ or die "No host in $_\n";
    $host = $1;
    /\bansible_ssh_port=(\d+)\b/ or die "No port in $_\n";
    $port = $1;
    /\bansible_ssh_user=(\S+)\b/ or die "No user in $_\n";
    $user = $1;
    last;
}
close HF;

defined $host or die "Node $NODE not known\n";

my @key;
for my $try_key ('objects/id_rsa', "$Bin/../objects/id_rsa") {
    -f $try_key or next;
    # need to silence ssh as git will create the file with mode 644
    chmod 0600, $try_key;
    @key = ('-i', $try_key);
}

my @ssh = (
    qw(ssh -oCheckHostIP=no -oStrictHostKeyChecking=no),
    @key,
    "-p$port"
);

my $ssh = join(' ', @ssh);

@SOURCES = map { "$user\@$host:$_" } @SOURCES;
my @OPTS = ($OPTS eq '' ? () : split(/\s+/, $OPTS));
my @rsync = ('rsync', @OPTS, @SOURCES, $DEST);
exec @rsync;

